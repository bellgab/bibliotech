# ================================================================
# POSTGRESQL KONFIGURÁCIÓS FÁJL (FEJLESZTÉSI KÖRNYEZET)
# ================================================================
#
# CÉLJA: PostgreSQL szerver optimalizálása Laravel alkalmazáshoz
# KÖRNYEZET: Docker konténer, fejlesztési beállítások
# VERZIÓ: PostgreSQL 15+ kompatibilis
# HASZNÁLAT: Bind mount a konténerbe
#
# DOCKER MOUNT PÉLDA:
# volumes:
#   - ./docker/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
#
# FIGYELEM: Ez egy FEJLESZTÉSI konfiguráció!
# Éles környezetben további optimalizálás szükséges!
# ================================================================

# ================================================================
# ALAPVETŐ KAPCSOLAT ÉS AUTHENTIKÁCIÓ
# ================================================================

# Figyelendő portok és címek
# 0.0.0.0: minden hálózati interfészen hallgat (Docker konténerhez)
listen_addresses = '*'
port = 5432

# Maximum kapcsolatok száma
# Fejlesztési környezet: alacsonyabb érték
# Éles környezet: CPU magok * 2-4
max_connections = 100

# Authentikáció timeout
authentication_timeout = 60s

# ================================================================
# MEMÓRIA BEÁLLÍTÁSOK (FEJLESZTÉSI OPTIMALIZÁLÁS)
# ================================================================

# Shared buffer: RAM egy része a PostgreSQL buffer pool-nak
# Ajánlott: rendszer RAM 25%-a
# Docker környezet: 1GB konténer = 256MB shared buffer
shared_buffers = 256MB

# Working memory: egyedi műveletek memóriája (ORDER BY, GROUP BY)
# Képlet: RAM / max_connections / 4
# 1GB / 100 / 4 = ~2.5MB
work_mem = 4MB

# Maintenance work memory: VACUUM, CREATE INDEX műveletekhez
# Általában work_mem * 10-50
maintenance_work_mem = 64MB

# Effective cache size: OS fájlrendszer cache mérete
# Segít a query planner optimalizálásában
# Docker: konténer memória korlát * 0.5-0.7
effective_cache_size = 512MB

# ================================================================
# WRITE-AHEAD LOGGING (WAL) BEÁLLÍTÁSOK
# ================================================================

# WAL level: replica támogatás
# minimal: alapvető művelet
# replica: streaming replication
# logical: logical replication
wal_level = replica

# WAL buffer: memóriában tartott WAL adatok
# Alapértelmezett: -1 (auto, shared_buffers/32)
wal_buffers = 8MB

# Checkpoint beállítások (adatbázis szinkronizálás lemezre)
# Maximum idő checkpoint-ok között
checkpoint_timeout = 15min

# Maximum WAL méret checkpoint-ok között
max_wal_size = 1GB
min_wal_size = 256MB

# Checkpoint completion target: I/O elosztás
# 0.1-0.9 között, 0.9 = lassabb de egyenletesebb I/O
checkpoint_completion_target = 0.7

# ================================================================
# ADATLAPOZÁS ÉS TÁROLÁS
# ================================================================

# Random page cost: véletlenszerű lemez hozzáférés költsége
# SSD: 1.0-1.1, HDD: 4.0
# Docker development: SSD feltételezés
random_page_cost = 1.1

# Sequential page cost: szekvenciális olvasás költsége
seq_page_cost = 1.0

# Effective I/O concurrency: párhuzamos I/O műveletek
# SSD: 200-300, HDD: 2-4
effective_io_concurrency = 200

# ================================================================
# QUERY PLANNER BEÁLLÍTÁSOK
# ================================================================

# Statistics target: statisztika gyűjtés részletessége
# Magasabb érték = pontosabb query planning, de lassabb ANALYZE
default_statistics_target = 100

# Query planner költség konstansok finomhangolása
cpu_tuple_cost = 0.01          # Egy sor feldolgozásának költsége
cpu_index_tuple_cost = 0.005   # Index sor feldolgozás költsége
cpu_operator_cost = 0.0025     # Operátor végrehajtás költsége

# ================================================================
# AUTOMATIKUS KARBANTARTÁS (AUTOVACUUM)
# ================================================================

# Autovacuum engedélyezése (erősen ajánlott!)
autovacuum = on

# Autovacuum műveletek közötti várakozás
autovacuum_naptime = 1min

# Maximum autovacuum worker folyamatok
autovacuum_max_workers = 3

# Vacuum threshold: sorok változása után vacuum indítás
autovacuum_vacuum_threshold = 50
autovacuum_vacuum_scale_factor = 0.2

# Analyze threshold: statisztika frissítés küszöb
autovacuum_analyze_threshold = 50
autovacuum_analyze_scale_factor = 0.1

# ================================================================
# LOGGING ÉS MONITORING
# ================================================================

# Log level: hiba szintek
# DEBUG5, DEBUG4, DEBUG3, DEBUG2, DEBUG1, INFO, NOTICE, WARNING, ERROR, LOG, FATAL, PANIC
log_min_messages = warning
log_min_error_statement = error

# Lassú query-k naplózása (fejlesztési debug-hoz)
log_min_duration_statement = 1000  # 1 másodpercnél lassabb query-k

# Log format és tartalom
log_line_prefix = '%t [%p-%l] %q%u@%d '
log_checkpoints = on
log_connections = off           # Fejlesztésben kikapcsolt (sok noise)
log_disconnections = off
log_lock_waits = on

# Statement logging (fejlesztési debug)
# log_statement = 'none'        # none, ddl, mod, all
# log_statement = 'mod'         # INSERT, UPDATE, DELETE naplózása

# ================================================================
# TELJESÍTMÉNY ÉS TIMEOUT BEÁLLÍTÁSOK
# ================================================================

# Statement timeout: lekérdezés maximális futási ideje
# 0 = nincs limit, fejlesztési környezet
statement_timeout = 30s

# Lock timeout: zárolásra várakozás maximális ideje
lock_timeout = 10s

# Idle in transaction timeout: inaktív tranzakciók timeout-ja
idle_in_transaction_session_timeout = 30min

# ================================================================
# KARAKTERKÓDOLÁS ÉS LOKALIZÁCIÓ
# ================================================================

# Default encoding (UTF8 ajánlott minden esetben)
# Beállítás: initdb időben vagy CREATE DATABASE-nél
# default_text_search_config = 'pg_catalog.english'

# Magyar lokalizáció támogatás
lc_messages = 'en_US.UTF-8'     # Hibaüzenetek nyelve
lc_monetary = 'hu_HU.UTF-8'     # Pénznem formátum
lc_numeric = 'hu_HU.UTF-8'      # Szám formátum  
lc_time = 'hu_HU.UTF-8'         # Dátum/idő formátum

# Timezone
timezone = 'Europe/Budapest'

# ================================================================
# FEJLESZTÉSI SPECIFIKUS BEÁLLÍTÁSOK
# ================================================================

# Development módban hasznos beállítások
log_statement = 'mod'           # DDL/DML statement-ek naplózása
log_duration = off              # Query futási idő naplózása
log_parameter_max_length = 1024 # Parameter értékek naplózásának max hossza

# Auto-explain extension (hasznos fejlesztéshez)
# shared_preload_libraries = 'auto_explain'
# auto_explain.log_min_duration = 1000
# auto_explain.log_analyze = true

# ================================================================
# BIZTONSÁG ÉS HOZZÁFÉRÉS KONTROLL
# ================================================================

# SSL beállítások (fejlesztési környezet: kikapcsolt)
ssl = off
# ssl_cert_file = 'server.crt'
# ssl_key_file = 'server.key'

# Password encryption
password_encryption = scram-sha-256

# ================================================================
# POSTGRESQL SPECIFIKUS EXTENSIONÖK
# ================================================================

# Hasznos extension-ök Laravel fejlesztéshez:
# CREATE EXTENSION IF NOT EXISTS "uuid-ossp";     -- UUID generálás
# CREATE EXTENSION IF NOT EXISTS "hstore";        -- Key-value tárolás
# CREATE EXTENSION IF NOT EXISTS "pg_trgm";       -- Fuzzy text search
# CREATE EXTENSION IF NOT EXISTS "btree_gin";     -- GIN indexek
# CREATE EXTENSION IF NOT EXISTS "pg_stat_statements"; -- Query statisztikák

# ================================================================
# MARIADB ÖSSZEHASONLÍTÁS ÉS MIGRÁCIÓS TIPPEK
# ================================================================

# KONFIGURÁCIÓS KÜLÖNBSÉGEK:
# 
# MariaDB my.cnf vs PostgreSQL postgresql.conf:
# 
# MariaDB: innodb_buffer_pool_size    -> PostgreSQL: shared_buffers
# MariaDB: query_cache_size           -> PostgreSQL: effective_cache_size
# MariaDB: max_connections            -> PostgreSQL: max_connections
# MariaDB: innodb_log_file_size       -> PostgreSQL: max_wal_size
# MariaDB: slow_query_log             -> PostgreSQL: log_min_duration_statement
# 
# ELŐNYÖK POSTGRESQL KONFIGURÁCIÓBAN:
# - Részletesebb query planner tuning
# - Fejlettebb WAL kezelés
# - Jobb extensibility (extension-ök)
# - Részletesebb autovacuum kontroll

# ================================================================
# TELJESÍTMÉNY TUNING JAVASLATOK
# ================================================================

# FEJLESZTÉSI KÖRNYEZET:
# - Alacsonyabb shared_buffers (256MB-1GB)
# - Gyakoribb checkpoint-ok
# - Részletesebb logging
# - Gyorsabb autovacuum

# ÉLES KÖRNYEZET OPTIMALIZÁLÁS:
# - shared_buffers: RAM 25%-40%
# - work_mem: RAM/max_connections/4
# - effective_cache_size: RAM 50%-75%
# - wal_buffers: shared_buffers/32
# - checkpoint_timeout: 15-30 perc
# - autovacuum_naptime: 1-5 perc

# MONITORING JAVASLATOK:
# - pg_stat_statements extension
# - pg_stat_activity figyelése
# - WAL méret monitoring
# - Checkpoint monitoring
# - Slow query analízis

# ================================================================
# KONFIGURÁCIÓS FÁJL VÉGE
# ================================================================

# ÚJRAINDÍTÁS UTÁN ÉRVÉNYESÜLŐ BEÁLLÍTÁSOK:
# - listen_addresses
# - port
# - max_connections
# - shared_buffers
# - wal_level

# RELOAD-DAL ÉRVÉNYESÜLŐ BEÁLLÍTÁSOK (pg_reload_conf()):
# - work_mem
# - log_min_duration_statement
# - autovacuum_naptime
# - checkpoint_timeout
